apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: node-labeller-sa

---
# Using ClusterRole instead of Role to grant access to cluster-scoped resources and not only within namespaces
# This gives the necessary access to update a node label, there might be some non-required verbs
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: nodes-labeller-role
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "update", "patch"]

---
# Using ClusterRoleBinding to bind ClusterRole to the ServiceAccount
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: node-controller
subjects:
- kind: ServiceAccount
  name: node-labeller-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: nodes-labeller-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Pod
metadata:
  namespace: default
  name: node-labeller
spec:
  serviceAccountName: node-labeller-sa
  containers:
  - name: node-labeller-container
    image: ramzichbl/k8-node-labeller
    env:
    # Change this value to specify node labels
    - name: NODES_LABEL
      value: "worker-node"

